---

# Note: Azure, irritatingly, doesn't provide all the info we need for cluster_hosts_target in one place. We have to run each of these, passing the results of the previous into the next.
#  + VM info: azure_rm_virtualmachine_info
#  + VM AZ info: azure_rm_resource_info
#  + Private IP info: azure_rm_networkinterface_info
#  + Public IP info: azure_rm_publicipaddress_info

- name: dynamic_inventory/azure | Get instance info
  azure.azcollection.azure_rm_virtualmachine_info:
    client_id: "{{cluster_vars[buildenv].azure_client_id}}"
    secret: "{{cluster_vars[buildenv].azure_secret}}"
    subscription_id: "{{cluster_vars[buildenv].azure_subscription_id}}"
    tenant: "{{cluster_vars[buildenv].azure_tenant}}"
    resource_group: "{{cluster_vars[buildenv].azure_resource_group}}"
    tags:
      - "cluster_name:{{cluster_name}}"
  register: r__azure_rm_virtualmachine_info
  delegate_to: localhost
  run_once: true

#- name: dynamic_inventory/azure | r__azure_rm_virtualmachine_info
#  debug: msg="{{r__azure_rm_virtualmachine_info}}"
#  delegate_to: localhost
#  run_once: true

- name: dynamic_inventory/azure | Get instance resource info (for VM AZ info)
  azure.azcollection.azure_rm_resource_info:
    client_id: "{{cluster_vars[buildenv].azure_client_id}}"
    secret: "{{cluster_vars[buildenv].azure_secret}}"
    subscription_id: "{{cluster_vars[buildenv].azure_subscription_id}}"
    tenant: "{{cluster_vars[buildenv].azure_tenant}}"
    resource_group: "{{cluster_vars[buildenv].azure_resource_group}}"
    resource_name: "{{ item.name }}"
    resource_type: VirtualMachines
    provider: Compute
  with_items: "{{ r__azure_rm_virtualmachine_info.vms | json_query(\"[?power_state=='running']\") }}"
  register: r__azure_rm_resource_info
  delegate_to: localhost
  run_once: true
  async: 7200
  poll: 0

- name: dynamic_inventory/azure | Wait for instance resource info (to get Zone info)
  async_status: { jid: "{{ item.ansible_job_id }}" }
  register: r__async_status__azure_rm_resource_info
  until: r__async_status__azure_rm_resource_info.finished
  delay: 3
  retries: 300
  with_items: "{{r__azure_rm_resource_info.results}}"

#- name: dynamic_inventory/azure | r__async_status__azure_rm_resource_info
#  debug: msg="{{r__async_status__azure_rm_resource_info}}"
#  delegate_to: localhost
#  run_once: true


- name: dynamic_inventory/azure | Get network interface info (per instance)
  azure.azcollection.azure_rm_networkinterface_info:
    client_id: "{{cluster_vars[buildenv].azure_client_id}}"
    secret: "{{cluster_vars[buildenv].azure_secret}}"
    subscription_id: "{{cluster_vars[buildenv].azure_subscription_id}}"
    tenant: "{{cluster_vars[buildenv].azure_tenant}}"
    resource_group: "{{cluster_vars[buildenv].azure_resource_group}}"
    name: "{{ item.networkInterface | basename }}"
  with_items: "{{ r__async_status__azure_rm_resource_info.results | json_query(\"[].response[0].{hosttype: tags.hosttype, hostname: name, networkInterface: properties.networkProfile.networkInterfaces[0].id, regionzone: join('-',[location,zones[0]])}\") }}"
  register: r__azure_rm_networkinterface_info
  delegate_to: localhost
  run_once: true
  async: 7200
  poll: 0

- name: dynamic_inventory/azure | Wait for network interface info
  async_status: { jid: "{{ item.ansible_job_id }}" }
  register: r__async_status__azure_rm_networkinterface_info
  until: r__async_status__azure_rm_networkinterface_info.finished
  delay: 3
  retries: 300
  with_items: "{{r__azure_rm_networkinterface_info.results}}"

#- name: dynamic_inventory/azure | r__async_status__azure_rm_networkinterface_info
#  debug: msg="{{r__async_status__azure_rm_networkinterface_info}}"
#  delegate_to: localhost
#  run_once: true


- name: dynamic_inventory/azure | Get publicipaddress info (per instance)
  azure.azcollection.azure_rm_publicipaddress_info:
    client_id: "{{cluster_vars[buildenv].azure_client_id}}"
    secret: "{{cluster_vars[buildenv].azure_secret}}"
    subscription_id: "{{cluster_vars[buildenv].azure_subscription_id}}"
    tenant: "{{cluster_vars[buildenv].azure_tenant}}"
    resource_group: "{{cluster_vars[buildenv].azure_resource_group}}"
    name: "{{ item.public_ip_id | basename }}"
  with_items: "{{ r__async_status__azure_rm_networkinterface_info.results | json_query(\"[].{hosttype: item.item.hosttype, hostname: item.item.hostname, regionzone: item.item.regionzone, private_ip: networkinterfaces[].ip_configurations[0].private_ip_address|[0], public_ip_id: networkinterfaces[].ip_configurations[0].public_ip_address|[0]}\") }}"
  register: r__azure_rm_networkinterface_info
  delegate_to: localhost
  run_once: true
  async: 7200
  poll: 0

- name: dynamic_inventory/azure | Wait for publicipaddress info
  async_status: { jid: "{{ item.ansible_job_id }}" }
  register: r__async_status__azure_rm_publicipaddress_info
  until: r__async_status__azure_rm_publicipaddress_info.finished
  delay: 3
  retries: 300
  with_items: "{{r__azure_rm_networkinterface_info.results}}"

#- name: dynamic_inventory/azure | r__async_status__azure_rm_publicipaddress_info
#  debug: msg="{{r__async_status__azure_rm_publicipaddress_info}}"
#  delegate_to: localhost
#  run_once: true

- name: dynamic_inventory/aws | Set dynamic_inventory_flat
  set_fact:
    dynamic_inventory_flat: |
      {%- if cluster_vars.inventory_ip == 'private' -%}
        {{ r__async_status__azure_rm_publicipaddress_info.results | json_query('[].{hosttype: item.item.hosttype, hostname: item.item.hostname, regionzone: item.item.regionzone, private_ip: item.item.private_ip, public_ip: publicipaddresses[0].ip_address, inventory_ip: item.item.private_ip}') | default([]) }}
      {%- else -%}
        {{ r__async_status__azure_rm_publicipaddress_info.results | json_query('[].{hosttype: item.item.hosttype, hostname: item.item.hostname, regionzone: item.item.regionzone, private_ip: item.item.private_ip, public_ip: publicipaddresses[0].ip_address, inventory_ip: publicipaddresses[0].ip_address}') | default([]) }}
      {%- endif -%}

