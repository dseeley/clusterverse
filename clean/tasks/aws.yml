---

- name: clean/aws | clean vms
  block:
    - name: clean/aws | Remove instances termination protection
      amazon.aws.ec2_instance:
        access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
        endpoint_url: "{{ cluster_vars.aws_endpoint_url | default(omit) }}"
        region: "{{ cluster_vars.region }}"
        state: "{{ item.instance_state }}"
        termination_protection: false
        instance_ids: ["{{ item.instance_id }}"]
      with_items: "{{ hosts_to_clean | json_query(\"[].{instance_id:instance_id, instance_state: instance_state}\") | default([]) }}"

    - name: clean/aws | Delete VMs
      amazon.aws.ec2_instance:
        access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
        endpoint_url: "{{ cluster_vars.aws_endpoint_url | default(omit) }}"
        region: "{{ cluster_vars.region }}"
        state: "absent"
        instance_ids: "{{ hosts_to_clean | json_query(\"[].instance_id\") }}"
        wait: true

    - name: clean/aws | Get any attached Elastic IPs
      community.aws.ec2_eip_info:
        access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
        endpoint_url: "{{ cluster_vars.aws_endpoint_url | default(omit) }}"
        region: "{{ cluster_vars.region }}"
        filters:
          public-ip: "{{ hosts_to_clean | json_query(\"[].ipv4.public\") | default([]) }}"
      register: r__ec2_eip_info

    - name: clean/aws | r__ec2_eip_info
      debug: msg={{r__ec2_eip_info}}

    - name: clean/aws | Delete Elastic IPs (if any were found)
      community.aws.ec2_eip:
        access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
        endpoint_url: "{{ cluster_vars.aws_endpoint_url | default(omit) }}"
        region: "{{ cluster_vars.region }}"
        ip: "{{ item.public_ip }}"
        state: absent
      with_items: "{{ r__ec2_eip_info.addresses }}"
  when: hosts_to_clean | length


- name: clean/aws | clean networking (when '-e clean=_all_')
  block:
    - name: clean/aws | Delete security group
      amazon.aws.ec2_group:
        access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
        endpoint_url: "{{ cluster_vars.aws_endpoint_url | default(omit) }}"
        region: "{{cluster_vars.region}}"
        name: "{{ cluster_name }}-sg"
        vpc_id: "{{vpc_id}}"
        state: absent
  when: clean is defined and clean == '_all_'
