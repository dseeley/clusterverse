---

- name: clean/libvirt
  block:
    - name: clean/libvirt | 'destroy' (forcible shutdown) VM
      community.libvirt.virt:
        uri: 'qemu+ssh://{{ cluster_vars.libvirt.username }}@{{ cluster_vars.libvirt.hypervisor }}/system?keyfile=id_rsa__libvirt_svc&no_verify=1'
        name: "{{item.name}}"
        state: destroyed
      with_items: "{{hosts_to_clean}}"
      register: r__virt__destroyed
      run_once: true
      async: 7200
      poll: 0

    - name: clean/libvirt | Wait for VM 'destroy' (forcible shutdown) to complete
      async_status: { jid: "{{ item.ansible_job_id }}" }
      register: r__virt__destroyed_jobs
      until: r__virt__destroyed_jobs is finished
      retries: 300
      with_items: "{{r__virt__destroyed.results}}"


    - name: clean/libvirt | Delete VM and force remove all of its related metadata (nvram, snapshots, etc.)
      dseeley.libvirt.virt:
        uri: 'qemu+ssh://{{ cluster_vars.libvirt.username }}@{{ cluster_vars.libvirt.hypervisor }}/system?keyfile=id_rsa__libvirt_svc&no_verify=1'
        name: "{{item.name}}"
        command: undefine
        force: true
      with_items: "{{hosts_to_clean}}"
      register: r__virt__undefine
      run_once: true
      async: 7200
      poll: 0

    - name: clean/libvirt | Wait for VM deletion to complete
      async_status: { jid: "{{ item.ansible_job_id }}" }
      register: r__virt__undefine_jobs
      until: r__virt__undefine_jobs is finished
      retries: 300
      with_items: "{{r__virt__undefine.results}}"


    - name: clean/libvirt | Delete disks
      dseeley.libvirt.virt_volume:
        uri: 'qemu+ssh://{{ cluster_vars.libvirt.username }}@{{ cluster_vars.libvirt.hypervisor }}/system?keyfile=id_rsa__libvirt_svc&no_verify=1'
        path: "{{item}}"
        command: delete
      register: r__virt__delete
      with_items: "{{hosts_to_clean | json_query(\"[].disk_info_cloud[].source_file\") }}"
  when: hosts_to_clean | length > 0
