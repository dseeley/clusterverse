---

- name: "Run {{mainclusteryml}} to add {{cluster_host_redeploying.hostname}} to cluster"
  dseeley.nested_playbook.nested_playbook:
    playbook_cmdline: "{{ (argv[1:] | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} -e cluster_suffix={{cluster_suffix}} -e '{'cluster_hosts_target': [{{cluster_host_redeploying | to_json}}]}'  {{ redeploy_extra_vars | extravars_from_dict }}"

- fail:
  when: testfail is defined and testfail == "fail_1"

- name: re-acquire the dynamic inventory (includes cluster_hosts_state)
  include_role:
    name: clusterverse/dynamic_inventory

- name: re-acquire cluster_hosts_target (dynamic_inventory already acquires the state)
  import_role:
    name: clusterverse/cluster_hosts
    tasks_from: "get_cluster_hosts_target.yml"

- name: stop/ remove previous instance
  block:
    - name: run predeleterole role
      include_role:
        name: "{{predeleterole}}"
      when: predeleterole is defined and predeleterole != ""

    - name: Power off old VMs
      include_role:
        name: clusterverse/redeploy/__common
        tasks_from: "powerchange_vms_{{cluster_vars.type}}.yml"
      vars:
        hosts_to_powerchange: "{{ hosts_to_remove }}"
        powerchange_new_state: "stop"

    - name: re-acquire the dynamic inventory (includes cluster_hosts_state)
      include_role:
        name: clusterverse/dynamic_inventory

    - name: re-acquire cluster_hosts_target (dynamic_inventory already acquires the state)
      import_role:
        name: clusterverse/cluster_hosts
        tasks_from: "get_cluster_hosts_target.yml"

    - fail:
      when: testfail is defined and testfail == "fail_2"
  vars:
    _root_cluster_host_redeploying: "{{cluster_host_redeploying.hostname | regex_replace('-(?!.*-).*')}}"
    hosts_to_remove: "{{ cluster_hosts_state | to_json | from_json | json_query(\"[?tagslabels.cv__lifecycle_state=='retiring' && starts_with(name, '\" + _root_cluster_host_redeploying + \"')]\") }}"
