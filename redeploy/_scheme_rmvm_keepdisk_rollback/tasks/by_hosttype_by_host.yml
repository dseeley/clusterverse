---

- debug: msg="by_hosttype_by_host | Attempting to redeploy {{host_to_redeploy.hostname}}"

- name: stop/ remove previous instance
  block:
    - name: by_hosttype_by_host | run predeleterole role
      include_role:
        name: "{{predeleterole}}"
      vars:
        hosts_to_remove: "{{ hosts_to_change }}"
      when: predeleterole is defined and predeleterole != ""

    - name: by_hosttype_by_host | Power off old VM
      include_role:
        name: clusterverse/redeploy/__common
        tasks_from: "powerchange_vms_{{cluster_vars.type}}.yml"
      vars:
        hosts_to_powerchange: "{{ hosts_to_change }}"
        powerchange_new_state: "stop"
  vars:
    _host_to_redeploy_nosuffix: "{{host_to_redeploy.hostname | regex_replace('-(?!.*-).*')}}"   #Remove the cluster_suffix from the hostname
    hosts_to_change: "{{ cluster_hosts_state | to_json | from_json | json_query(\"[?tagslabels.cv__lifecycle_state!='current' && starts_with(name, '\" + _host_to_redeploy_nosuffix + \"')]\") }}"

- name: "by_hosttype_by_host | Run {{mainclusteryml}} to add {{host_to_redeploy.hostname}} to cluster"
  dseeley.nested_playbook.nested_playbook:
    playbook_cmdline: "{{ (argv[1:] | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} -e cluster_suffix={{cluster_suffix}} -e '{'cluster_hosts_target': [{{host_to_redeploy | to_json}}]}' {{ redeploy_extra_vars | extravars_from_dict }}"

- name: by_hosttype_by_host | re-acquire cluster_hosts_state (NOT cluster_hosts_target, as we are augmenting this in _add_src_diskinfo_to_cluster_hosts_target__ (also, it is not affected by change of state))
  include_role:
    name: clusterverse/cluster_hosts
    tasks_from: "get_cluster_hosts_state_{{cluster_vars.type}}.yml"

- name: by_hosttype_by_host | Power on new VM (not needed for normal redeploy, but for rescue case)
  include_role:
    name: clusterverse/redeploy/__common
    tasks_from: "powerchange_vms_{{cluster_vars.type}}.yml"
  vars:
    hosts_to_powerchange: "{{ cluster_hosts_state | selectattr('name', '==', host_to_redeploy.hostname) | list }}"
    powerchange_new_state: "start"

- name: by_hosttype_by_host | re-acquire the dynamic inventory (includes cluster_hosts_state)
  include_role:
    name: clusterverse/dynamic_inventory

- name: by_hosttype_by_host | re-acquire cluster_hosts_state (NOT cluster_hosts_target, as we are augmenting this in _add_src_diskinfo_to_cluster_hosts_target__ (also, it is not affected by change of state))
  include_role:
    name: clusterverse/cluster_hosts
    tasks_from: "get_cluster_hosts_state_{{cluster_vars.type}}.yml"
