---

- name: config/pkgs | remove fwupd
  become: true
  ansible.builtin.apt:
    name: ['fwupd']
    state: absent
    allow_change_held_packages: true
    autoremove: true
    purge: true
  when: ansible_os_family == 'Debian'

- name: config/pkgs | remove modemmanager
  become: true
  ansible.builtin.apt:
    name: ['modemmanager']
    state: absent
    allow_change_held_packages: true
    autoremove: true
    purge: true
  when: ansible_os_family == 'Debian'

- name: confin/pkgs | remove snapd
  block:
    - name: config/pkgs | remove snapd
      become: true
      ansible.builtin.apt:
        name: ['snapd']
        state: absent
        allow_change_held_packages: true
        autoremove: true
        purge: true
      register: r__apt_remove_snapd

# Note: Doesn't work on Unbuntu 16.04
#    - name: config/pkgs | prevent snapd installing with apt upgrade
#      become: true
#      ansible.builtin.dpkg_selections:
#        name: snapd
#        selection: hold

    - name: config/pkgs | prevent snapd installing with apt upgrade
      become: true
      ansible.builtin.shell: apt-mark hold snapd
      when: r__apt_remove_snapd.changed
  when: ansible_os_family == 'Debian' and (remove_snapd is defined and remove_snapd|bool)

- name: config/pkgs | upgrade all packages, reboot and wait (if reboot_on_package_upgrade==true)
  block:
    - name: config/pkgs | upgrade all packages (apt - Debian/Ubuntu)
      become: true
      ansible.builtin.apt:
        autoremove: true
        update_cache: true
        upgrade: dist
      register: apt_packages_update
      when: ansible_os_family == 'Debian'

    - name: config/pkgs | upgrade all packages (yum - RedHat/CentOS)
      become: true
      ansible.builtin.yum:
        name: "*"
        state: latest
      register: yum_packages_update
      when: ansible_os_family == 'RedHat'

    - name: config/pkgs | reboot and wait (if reboot_on_package_upgrade==true)
      become: true
      ansible.builtin.reboot:
        pre_reboot_delay: 60    # Minimum is 60s (it is converted to minutes).  This is needed so that the module can exit before the VM closes the connection, otherwise (https://github.com/ansible/ansible/issues/47647) occurs.  Symptom is seeing a '255' exit code for the shutdown command, and an exit of "Control master terminated unexpectedly" (it should exit with code 0, and "Received exit status from master 0").
      timeout: 300
      when: (reboot_on_package_upgrade is defined and reboot_on_package_upgrade|bool) and (apt_packages_update.changed or yum_packages_update.changed)
  when: pkgupdate is defined and (pkgupdate == 'always' or (pkgupdate in ['onCreate', 'on_create'] and inventory_hostname in (hostvars['localhost'].cluster_hosts_created | default([]) )))
