---

- name: clusterverse | Deploy the cluster
  hosts: localhost
  gather_facts: false
  tasks:
    - { name: "Get dependent roles via ansible-galaxy", local_action: "command ansible-galaxy role install --ignore-errors -fr requirements.yml", tags: ["always"] }

    - { include_role: { name: "clusterverse/clean", apply: { tags: ["clusterverse_clean"]} }, tags: ["clusterverse_clean"], when: "clean is defined" }
    - { include_role: { name: "clusterverse/create", apply: { tags: ["clusterverse_create"]} }, tags: ["clusterverse_create"] }
    - { include_role: { name: "clusterverse/dynamic_inventory", apply: { tags: ["clusterverse_dynamic_inventory"]} }, tags: ["clusterverse_dynamic_inventory"] }
    - { name: "clusterverse | Copy ansible_ssh_private_key_file", local_action: "copy content={{cluster_vars[buildenv].ssh_connection_cfg.host.ansible_ssh_private_key_file}} dest='id_rsa_ansible_ssh_private_key_file' mode='0600'", when: "cluster_vars[buildenv].ssh_connection_cfg.host.ansible_ssh_private_key_file is defined", no_log: true, tags: ["always"] }
    - { name: "clusterverse | Copy bastion sshkey", local_action: "copy content={{cluster_vars[buildenv].ssh_connection_cfg.bastion.ssh_priv_key}} dest='id_rsa_bastion' mode='0600'", when: "cluster_vars[buildenv].ssh_connection_cfg.bastion.ssh_priv_key is defined", no_log: true, tags: ["always"] }

- name: clusterverse | Install Ansible-supported python version on old (xenial, bionic) machines
  hosts: all
  gather_facts: false
  tags: ["clusterverse_create"]
  tasks:
    - name: "Install python 3.9 from source.  WARNING: This is not the native Python for this OS - things written for Python may not work!"
      raw: |-
        set -euxo pipefail
        while fuser /var/lib/apt/lists/lock -v 2>&1; do sleep 5; done;
        while fuser /var/lib/dpkg/lock -v 2>&1; do sleep 5; done;
        while fuser /var/lib/dpkg/lock-frontend -v 2>&1; do sleep 5; done;
        sudo apt update
        sudo apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget libapt-pkg-dev
        wget https://www.python.org/ftp/python/3.9.19/Python-3.9.19.tgz --output-document=Python-3.9.19.tgz
        tar xzf Python-3.9.19.tgz
        cd Python-3.9.19/
        sudo ./configure
        sudo make altinstall
        sudo ln -sf /usr/local/bin/python3.9 /usr/bin/python3 
        sudo apt remove -y python3-commandnotfound python3-debian
        curl https://bootstrap.pypa.io/pip/get-pip.py | sudo python3.9
        sudo sed -i '/deb-src/s/^# //' /etc/apt/sources.list
        sudo apt update
        apt-get source python-apt --allow-insecure-repositories || apt-get source python-apt --allow-unauthenticated
        cd python-apt-*
        sudo python3 setup.py install
      register: r__raw__python_install
      until: r__raw__python_install is success
      retries: 1
      when: hostvars['localhost']['cluster_vars']['image'] | regex_search('xenial|bionic')


- name: clusterverse | Wait for SSH connections
  hosts: all
  gather_facts: false
  tasks: [ {wait_for_connection: "", tags: ["always"] } ]

- name: clusterverse | Configure the cluster
  hosts: all:!not_target_hosts
  gather_facts: false
  tasks: [ { include_role: { name: "clusterverse/config", apply: { tags: ["clusterverse_config"]} }, tags: ["clusterverse_config"] } ]


###### Application roles
- name: Application roles
  hosts: all
  tasks:
    - { include_role: { name: "clusterverse/_dependencies", apply: { tags: ["always"] } }, tags: ["always"], when: "'clusterverse_config' not in ansible_run_tags" }      # If we --skip-tags=clusterverse_config, this will ensure the variables from /cluster_defs are loaded.
    - { include_role: { name: "testrole", apply: { tags: ["testrole"]} }, tags: ["testrole"] }
######


- name: clusterverse | Perform cluster readiness operations
  hosts: localhost
  tasks: [ { include_role: { name: "clusterverse/readiness", apply: { tags: ["clusterverse_readiness"]} }, tags: ["clusterverse_readiness"] } ]
