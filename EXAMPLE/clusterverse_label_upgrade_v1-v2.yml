---

- name: Clusterverse label upgrade v1-v2
  hosts: localhost
  gather_facts: false
  tasks:
    - include_role: { name: "clusterverse/_dependencies" }
#    - include_role: { name: "clusterverse/cluster_hosts" }
#    - include_role: { name: "clusterverse/dynamic_inventory" }

    - block:
        - name: upgrade/aws | Get existing instance info
          amazon.aws.ec2_instance_info:
            access_key: "{{cluster_vars[buildenv].aws_access_key}}"
            secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
            session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
            region: "{{cluster_vars.region}}"
            filters:
              "tag:cluster_name": "{{cluster_name}}"
          register: r__ec2_instance_info

        - name: upgrade/aws | upgrade tags"
          amazon.aws.ec2_tag:
            access_key: "{{cluster_vars[buildenv].aws_access_key}}"
            secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
            session_token: "{{cluster_vars[buildenv].aws_session_token | default(omit)}}"
            region: "{{cluster_vars.region}}"
            resource: "{{ item.instance_id }}"
            tags: "{{ _tags | combine(item.tags) }}"
          with_items: "{{r__ec2_instance_info.instances}}"
          vars:
            _tags: |
              {% set res = {'cv__cluster_name': cluster_name} -%}
              {%- if 'inv_node_version' in item.tags -%}
                {%- set _ = res.update({'cv__app_version': item.tags.inv_node_version}) -%}
              {%- endif -%}
              {%- if 'cluster_suffix' in item.tags -%}
                {%- set _ = res.update({'cv__cluster_suffix': item.tags.cluster_suffix}) -%}
              {%- endif -%}
              {%- if 'env' in item.tags -%}
                {%- set _ = res.update({'cv__environment': item.tags.env}) -%}
              {%- endif -%}
              {%- if 'owner' in item.tags -%}
                {%- set _ = res.update({'cv__owner': item.tags.owner}) -%}
              {%- endif -%}
              {%- if 'lifecycle_state' in item.tags -%}
                {%- set _ = res.update({'cv__lifecycle_state': item.tags.lifecycle_state}) -%}
              {%- endif -%}
              {%- if 'hosttype' in item.tags -%}
                {%- set _ = res.update({'cv__hosttype': item.tags.hosttype}) -%}
              {%- endif -%}
              {{ res }}
      when: cluster_vars.type == "aws"

    - block:
        - block:
            - name: get_cluster_hosts_state/libvirt | Copy libvirt ssh private key file
              copy: { content: "{{cluster_vars.libvirt.private_key}}", dest: '{{ playbook_dir }}/id_rsa__libvirt_svc', mode: '0600' }
              no_log: true
              delegate_to: localhost
              run_once: true
              when: "cluster_vars.type == 'libvirt'  and  cluster_vars.libvirt.private_key is defined"

            - name: get_cluster_hosts_state/libvirt | Get basic instance info of all vms
              set_fact:
                libvirt_inventory: "{{ lookup('dseeley.inventory_lookup.inventory', 'community.libvirt.libvirt', plugin_options=params) }}"
              vars:
                params:
                  uri: 'qemu+ssh://{{ cluster_vars.libvirt.username }}@{{ cluster_vars.libvirt.hypervisor }}/system?keyfile=id_rsa__libvirt_svc&no_verify=1'

#        - name: get_cluster_hosts_state/libvirt | debug libvirt_inventory
#          debug: msg={{libvirt_inventory | json_query('[].all[].*[]') }}

        - debug:
            msg:
              - "{{item.inventory_hostname}}"
              - "{{ inventory_tagslabels }}"
              - "{{ _tags }}"
          with_items: "{{ libvirt_inventory | json_query('[].all[].*[]') }}"
          when: inventory_tagslabels | type_debug=='dict'
          vars:
            inventory_tagslabels: "{{item.xml_desc | xpath('/domain/metadata/clusterverse:cdata//text()', {'clusterverse': 'https://github.com/dseeley/clusterverse'} ) | json_query(\"[ 0 ]\") | from_yaml}}"
            _tags: |
              {% set res = {} -%}
              {%- if 'cluster_name' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__cluster_name': inventory_tagslabels.cluster_name}) -%}
              {%- endif -%}
              {%- if 'inv_node_version' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__app_version': inventory_tagslabels.inv_node_version}) -%}
              {%- endif -%}
              {%- if 'cluster_suffix' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__cluster_suffix': inventory_tagslabels.cluster_suffix}) -%}
              {%- endif -%}
              {%- if 'env' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__environment': inventory_tagslabels.env}) -%}
              {%- endif -%}
              {%- if 'owner' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__owner': inventory_tagslabels.owner}) -%}
              {%- endif -%}
              {%- if 'lifecycle_state' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__lifecycle_state': inventory_tagslabels.lifecycle_state}) -%}
              {%- endif -%}
              {%- if 'regionzone' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__regionzone': inventory_tagslabels.regionzone}) -%}
              {%- endif -%}
              {%- if 'hosttype' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__hosttype': inventory_tagslabels.hosttype}) -%}
              {%- endif -%}
              {{ res }}

        - name: "upgrade/libvirt | upgrade tags"
          dseeley.libvirt.virt:
            uri: 'qemu+ssh://{{ cluster_vars.libvirt.username }}@{{ cluster_vars.libvirt.hypervisor }}/system?keyfile=id_rsa__libvirt_svc&no_verify=1'
            command: set_metadata
            name: "{{item.inventory_hostname}}"
            xml: "<cdata><![CDATA[{{ inventory_tagslabels | combine(_tags) }}]]></cdata>"
            other_params: { 'metadata_ns_key': 'clusterverse', 'metadata_ns_uri': 'https://github.com/dseeley/clusterverse' }
          with_items: "{{ libvirt_inventory | json_query('[].all[].*[]') }}"
          when: inventory_tagslabels | type_debug=='dict'
          vars:
            inventory_tagslabels: "{{item.xml_desc | xpath('/domain/metadata/clusterverse:cdata//text()', {'clusterverse': 'https://github.com/dseeley/clusterverse'} ) | json_query(\"[ 0 ]\") | from_yaml}}"
            _tags: |
              {% set res = {} -%}
              {%- if 'cluster_name' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__cluster_name': inventory_tagslabels.cluster_name}) -%}
              {%- endif -%}
              {%- if 'inv_node_version' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__app_version': inventory_tagslabels.inv_node_version}) -%}
              {%- endif -%}
              {%- if 'cluster_suffix' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__cluster_suffix': inventory_tagslabels.cluster_suffix}) -%}
              {%- endif -%}
              {%- if 'env' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__environment': inventory_tagslabels.env}) -%}
              {%- endif -%}
              {%- if 'owner' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__owner': inventory_tagslabels.owner}) -%}
              {%- endif -%}
              {%- if 'lifecycle_state' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__lifecycle_state': inventory_tagslabels.lifecycle_state}) -%}
              {%- endif -%}
              {%- if 'regionzone' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__regionzone': inventory_tagslabels.regionzone}) -%}
              {%- endif -%}
              {%- if 'hosttype' in inventory_tagslabels -%}
                {%- set _ = res.update({'cv__hosttype': inventory_tagslabels.hosttype}) -%}
              {%- endif -%}
              {{ res }}
      when: cluster_vars.type == "libvirt"
