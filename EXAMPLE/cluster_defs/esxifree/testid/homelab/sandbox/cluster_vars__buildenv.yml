---

cluster_vars:
  sandbox:
    ssh_connection_cfg:
      host: &host_ssh_connection_cfg
        ansible_user: "ansible"
        ansible_ssh_private_key_file: !vault |
          $ANSIBLE_VAULT;1.2;AES256;sandbox
          7669080460651349243347331538721104778691266429457726036813912140404310
#      bastion:
#        ssh_args: '-o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./id_rsa_bastion -W %h:%p -q user@192.168.0.1"'
#        ssh_priv_key: !vault |
#          $ANSIBLE_VAULT;1.2;AES256;sandbox
#          7669080460651349243347331538721104778691266429457726036813912140404310
#    nsupdate_cfg: {server: "", key_name: "", key_secret: ""}      # If you're using bind9 (or other nsupdate-compatible 'dns_server')

    hosttype_vars:
      sys:
        auto_volumes: [ ]
        flavor: { num_cpus: "2", memory_mb: "2048" }
        version: "{{sys_version | default('')}}"
        networks: [ &sys_NET1 { networkName: "VM Network", virtualDev: vmxnet3 } ]
        vms_by_az: { a: 1, b: 1, c: 0 }

      sysdisks2:
        auto_volumes:
          - { mountpoint: "/media/mysvc1", volume_size: 1, provisioning_type: "thin", fstype: "ext4" }
          - { mountpoint: "/media/mysvc2", volume_size: 1, provisioning_type: "thin", fstype: "ext4" }
        flavor: { num_cpus: "2", memory_mb: "2048" }
        version: "{{sys_version | default('')}}"
        networks: [ &sysdisks2_NET1 { networkName: "VM Network", virtualDev: vmxnet3 } ]
        vms_by_az: { a: 1, b: 1, c: 0 }

      sysdiskslvm:
        auto_volumes:
          - { mountpoint: "/media/mysvc", volume_size: 1, provisioning_type: "thin", fstype: "ext4" }
          - { mountpoint: "/media/mysvc", volume_size: 1, provisioning_type: "thin", fstype: "ext4" }
        lvmparams: { vg_name: "vg0", lv_name: "lv0", lv_size: "100%VG" }
        flavor: { num_cpus: "2", memory_mb: "2048" }
        version: "{{sys_version | default('')}}"
        networks: [ &sysdisks2lvm_NET1 { networkName: "VM Network", virtualDev: vmxnet3 } ]
        vms_by_az: { a: 1, b: 1, c: 0 }

#      sysnets1:
#        auto_volumes: [ ]
#        flavor: { num_cpus: "2", memory_mb: "2048" }
#        version: "{{sys_version | default('')}}"
#        networks:
#          - &sysnets1 { networkName: "VM Network", virtualDev: vmxnet3 }
#        vms_by_az:
#          a:
#            - networks: [ { <<: *sysnets1 } ]
#          b:
#            - networks: [ { <<: *sysnets1 } ]

#      sysnets2:
#        auto_volumes: [ ]
#        flavor: { num_cpus: "2", memory_mb: "2048" }
#        version: "{{sys_version | default('')}}"
#        networks:
#          - &systestnets_NET1 { networkName: "VM Network", virtualDev: vmxnet3 }
#          - &systestnets_NET2 { networkName: "untagged", virtualDev: vmxnet3 } ]
#        vms_by_az:
#          a:
#            - networks:
#                - <<: *systestnets_NET1
#                  macAddress: "00:0c:29:2d:cd:7d"
#                  cloudinit_netplan:
#                    ethernets: { eth0: { dhcp4: true } }
#                - <<: *systestnets_NET2
#                  macAddress: "00:0c:29:2d:cd:7e"
#                  cloudinit_netplan:
#                    ethernets: { eth0: { dhcp4: true } }
#            - networks:
#                - <<: *systestnets_NET1
#                  macAddress: "00:0c:29:2d:cd:7f"
#                  cloudinit_netplan:
#                    ethernets: { eth0: { dhcp4: false, addresses: ["192.168.1.32/25"], gateway4: 192.168.1.1, nameservers: { addresses: ["192.168.1.2", "8.8.8.8", "8.8.4.4"], search: ["{{_dns_nameserver_zone}}"] } } }
#                    vlans: {vlan25: {id: 25, link: eth0, addresses: ["192.168.1.197/26"]}}
#          b:
#            - networks:
#                - <<: *systestnets_NET1
#                  cloudinit_netplan:
#                    ethernets: { eth0: { dhcp4: true } }

_host_ssh_connection_cfg: { <<: *host_ssh_connection_cfg }
