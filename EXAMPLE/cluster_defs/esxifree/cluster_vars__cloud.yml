---

_scheme_rmvm_keepdisk_rollback__copy_or_move: "move"

prometheus_node_exporter_install: false
filebeat_install: false
metricbeat_install: false

beats_config:
  filebeat:
#    output_logstash_hosts: ["localhost:5044"]        # The destination hosts for filebeat-gathered logs
#    extra_logs_paths:                                # The array is optional, if you need to add more paths or files to scrape for logs
#      - /var/log/myapp/*.log
  metricbeat:
#    output_logstash_hosts: ["localhost:5044"]        # The destination hosts for metricbeat-gathered metrics
#    diskio:                                          # Diskio retrieves metrics for all disks partitions by default. When diskio.include_devices is defined, only look for defined partitions
#      include_devices: ["sda", "sdb", "nvme0n1", "nvme1n1", "nvme2n1"]

## Source images from which to clone.  Set these as variables so they can be selected on command line (for automated testing).
#_ubuntu2004image: "gold-ubuntu2004-20211122141629"        # Specific Ubuntu Focal (20.04.x) image
_ubuntu2004image: "gold-ubuntu2004-*"                     # Latest Ubuntu Focal (20.04.x) image
_ubuntu2204image: "gold-ubuntu2204-*"                     # Latest Ubuntu Jammy (22.04.x) image
_centos7image: "gold-centos7-*"
_alma8image: "gold-alma8-*"


cluster_vars:
  image: "{{_ubuntu2204image}}"
  dns_cloud_internal_domain: ""                               # The cloud-internal zone as defined by the cloud provider (e.g. GCP, AWS)
  dns_nameserver_zone: &dns_nameserver_zone ""                # The zone that dns_server will operate on.  gcloud dns needs a trailing '.'; leave blank for no DNS (IPs only)
  dns_user_domain: "{%- if _dns_nameserver_zone -%}{{cloud_type}}-{{region}}.{{app_class}}.{{buildenv}}.{{_dns_nameserver_zone}}{%- endif -%}"         # A user-defined _domain_ part of the FDQN, (if more prefixes are required before the dns_nameserver_zone)
  dns_server: ""                                              # Specify DNS server. nsupdate, route53 or clouddns.  If empty string is specified, no DNS will be added.
  assign_public_ip: no                                        # Whether a 'dynamic' (will change on stop/start), 'static' (e.g. elastic IP), or no public IP should be assigned.
  inventory_ip: "private"                                     # 'public' or 'private', (private in case we're operating in a private LAN).  If public, 'assign_public_ip' must be 'yes'
  custom_tagslabels:
    inv_cost_centre: "0000000000"
  esxi:
    esxi_ip: "192.168.1.30"
    username: "root"
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      7669080460651349243347331538721104778691266429457726036813912140404310
    datastore: "vdisks"
    hardware_version: "19"
    delete_cloudinit: yes
    cloudinit_userdata:
      users:
        - name: ansible
          ssh_authorized_keys: ['ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDkxFIE5/GIMhdojtl6mzVn38vXMzSL29LQ==']
          sudo: "ALL=(ALL) NOPASSWD:ALL"
          lock_passwd: false
          shell: /bin/bash
#      system_info: { default_user: ~ }                           # Ensure there is no default_user (ubuntu)
#      swap: { filename: /swap.img, size: auto, maxsize: 4G }     # Add new swap file
#      mounts: [ [ swap, null ] ]                                 # Delete preexisting swap file

_dns_nameserver_zone: *dns_nameserver_zone
