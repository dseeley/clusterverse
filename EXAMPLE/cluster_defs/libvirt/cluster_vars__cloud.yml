---

_scheme_rmvm_keepdisk_rollback__copy_or_move: "move"

## Source images from which to clone.  Set these as variables so they can be selected on command line (for automated testing).
#_ubuntu2204image: "gold-ubuntu2404-20240515082201"        # Specific Noble Numbat (24.04.x) image
_ubuntu2404image: "gold-ubuntu2404-*"                     # Latest Ubuntu Noble Numbat (24.04.x) image
_ubuntu2204image: "gold-ubuntu2204-*"                     # Latest Ubuntu Jammy Jellyfish (22.04.x) image
_ubuntu2004image: "gold-ubuntu2004-*"                     # Latest Ubuntu Focal Fossa (20.04.x) image
_ubuntu1804image: "gold-ubuntu1804-*"                     # Latest Ubuntu Bionic Beaver (18.04.x) image
_centos7image: "gold-centos7-*"
_alma8image: "gold-alma8-*"


cluster_vars:
  image: "{{_ubuntu2404image}}"
  dns_cloud_internal_domain: ""                               # The cloud-internal zone as defined by the cloud provider (e.g. GCP, AWS)
  dns_nameserver_zone: &dns_nameserver_zone ""                # The zone that dns_server will operate on.  gcloud dns needs a trailing '.'; leave blank for no DNS (IPs only)
  dns_user_domain: "{%- if _dns_nameserver_zone -%}{{cloud_type}}-{{region}}.{{buildenv}}.{{_dns_nameserver_zone}}{%- endif -%}"         # A user-defined _domain_ part of the FDQN, (if more prefixes are required before the dns_nameserver_zone)
  dns_server: ""                                              # Specify DNS server. nsupdate, route53 or clouddns.  If empty string is specified, no DNS will be added.
  inventory_ip: "private"                                     # 'public' or 'private', (private in case we're operating in a private LAN).  If public, 'assign_public_ip' must be 'static' or 'dynamic'
  libvirt:
    hypervisor: "192.168.1.3"
    username: "svc"
    private_key: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      7669080460651349243347331538721104778691266429457726036813912140404310
    storage_pool: "/media/vdisks"
    delete_cloudinit: true
    cloudinit_userdata:
      users:
        - name: ansible
          ssh_authorized_keys: ['ssh-rsa AAAAXXXXXX==']
          sudo: "ALL=(ALL) NOPASSWD:ALL"
          lock_passwd: false
          shell: /bin/bash
#      system_info: { default_user: ~ }                           # Ensure there is no default_user (ubuntu)
#      swap: { filename: /swap.img, size: auto, maxsize: 4G }     # Add new swap file
#      mounts: [ [ swap, null ] ]                                 # Delete preexisting swap file

_dns_nameserver_zone: *dns_nameserver_zone
